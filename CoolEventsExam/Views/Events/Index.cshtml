@using CoolEventsExam.Models.Entity;
@using Microsoft.AspNetCore.Identity;
@model IEnumerable<CoolEventsExam.Models.Entity.Event>
@inject SignInManager<User> SignInManager
@inject UserManager<User> UserManager
@{
    ViewData["Title"] = "Index";
}

<h1>All Events</h1>


<p>
    @if (User.IsInRole("Administrator"))
    {
        <a asp-action="Create">Create New</a>
    }
</p>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Description)
            </th>
            <th>
                Image
            </th>
            <th>
                @Html.DisplayNameFor(model => model.EventDate)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Description)
            </td>
            <td>
                <img src=@Html.ValueFor(modelItem => item.ImageURL) height="100"/>
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.EventDate)
            </td>
            <td>
                @if (User.IsInRole("Administrator"))
                {
                    <a asp-action="Edit" asp-route-id="@item.Id">Edit | </a>
                }
                <a asp-action="Details" asp-route-id="@item.Id">Details </a>
                @if (User.IsInRole("Administrator"))
                {
                    <a asp-action="Delete" asp-route-id="@item.Id">| Delete</a>
                }
                </td>
        </tr>
}
    </tbody>
</table>
